// glsl / C++ compatible source as interface for TransformCamera
#ifdef __cplusplus
#   define TC_MAT4 gpu::Mat4
#   define TC_VEC4 gpu::Vec4
#   define TC_MUTABLE mutable
#else
#   define TC_MAT4 mat4
#   define TC_VEC4 vec4
#   define TC_MUTABLE 
#endif

struct _TransformCamera {
    TC_MUTABLE TC_MAT4 _view;
    TC_MUTABLE TC_MAT4 _viewInverse;
    TC_MUTABLE TC_MAT4 _previousView;
    TC_MUTABLE TC_MAT4 _previousViewInverse;
    TC_MAT4 _projection;
    TC_MUTABLE TC_MAT4 _projectionInverse;
    TC_MUTABLE TC_MAT4 _projectionViewUntranslated;
    // Previous projection view untranslated AND jittered with current jitter
    TC_MUTABLE TC_MAT4 _previousProjectionViewUntranslated;
    TC_VEC4 _viewport; // Public value is int but float in the shader to stay in floats for all the transform computations.
    TC_MUTABLE TC_VEC4 _stereoInfo;
};

    // <@if 1@>
    // Trigger Scribe include 
    // <@endif@> <!def that !> 
//

